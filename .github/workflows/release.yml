name: Agent Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version (e.g., v1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Is this a prerelease?'
        required: true
        type: boolean
        default: false

concurrency:
  group: "winterflow-agent-release"
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  agent-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Go version from go.mod
        id: goversion
        run: |
          GO_VERSION=$(grep -E '^go [0-9]+\.[0-9]+' go.mod | cut -d ' ' -f 2)
          echo "version=$GO_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.goversion.outputs.version }}
          check-latest: true

      - name: Build binaries
        env:
          VERSION: ${{ github.event.inputs.version }}
          CGO_ENABLED: 0
        run: |
          # Remove 'v' prefix for semantic version used in build flags
          SEMVER=${VERSION#v}
          
          # Build for linux/amd64
          echo "Building for linux/amd64..."
          GOOS=linux GOARCH=amd64 go build -v -ldflags="-s -w -X winterflow-agent/internal/agent.version=${SEMVER}" -o winterflow-agent-linux-amd64 ./main.go
          
          # Build for linux/arm64
          echo "Building for linux/arm64..."
          GOOS=linux GOARCH=arm64 go build -v -ldflags="-s -w -X winterflow-agent/internal/agent.version=${SEMVER}" -o winterflow-agent-linux-arm64 ./main.go

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.event.inputs.version }}" \
            winterflow-agent-linux-* \
            --title "Release ${{ github.event.inputs.version }}" \
            --draft=false \
            --prerelease=${{ github.event.inputs.prerelease }}