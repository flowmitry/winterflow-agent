---
description: 
globs: ansible/**
alwaysApply: false
---
# Ansible Directory Structure and Organization

## Directory Layout
The Ansible configuration is organized in [ansible/](mdc:ansible) with the following structure:

- **[ansible/playbooks/](mdc:ansible/playbooks)** - Main playbooks organized by category
  - `system/configuration/` - System configuration playbooks like [install_utils.yml](mdc:ansible/playbooks/system/configuration/install_utils.yml)
  - `system/security/` - Security-related playbooks like [configure_ssh.yml](mdc:ansible/playbooks/system/security/configure_ssh.yml)
  - `system/management/` - System management playbooks like [upgrade_packages.yml](mdc:ansible/playbooks/system/management/upgrade_packages.yml)
  - `apps/` - Application deployment playbooks
  - `ingress/` - Ingress controller playbooks

- **[ansible/roles/](mdc:ansible/roles)** - Reusable roles
  - [docker/](mdc:ansible/roles/docker) - Docker installation and configuration
  - [ufw/](mdc:ansible/roles/ufw) - UFW firewall configuration
  - [docker_compose/](mdc:ansible/roles/docker_compose) - Docker Compose setup
  - [check_requirements/](mdc:ansible/roles/check_requirements) - OS compatibility validation

- **[ansible/apps_roles/](mdc:ansible/apps_roles)** - Application-specific roles with UUID-based naming
- **[ansible/inventory/](mdc:ansible/inventory)** - Inventory files for different environments

## Role Organization Pattern
All roles follow a standardized block-based organization pattern:

### 1. Debian Family Block
```yaml
- name: Configure [Service] (Debian family)
  when: ansible_os_family == "Debian"
  block:
    # All Debian-specific tasks here
```

### 2. Unsupported OS Warning Block
```yaml
- name: Unsupported OS family warning
  when: ansible_os_family != "Debian"
  block:
    - name: Display unsupported OS warning
      debug:
        msg: |
          WARNING: [Service] role is not supported on {{ ansible_os_family }} systems.
          This role is designed for Debian-based systems only (Ubuntu, Debian, etc.).
```

### 3. Generic Tasks
Tasks that work across all operating systems are placed outside blocks.

## Examples
- See [ansible/roles/docker/tasks/main.yml](mdc:ansible/roles/docker/tasks/main.yml) for Docker role implementation
- See [ansible/roles/ufw/tasks/main.yml](mdc:ansible/roles/ufw/tasks/main.yml) for UFW role implementation
